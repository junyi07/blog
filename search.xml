<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/blog/2020/12/27/2020-12-27-hello-world/</url>
    <content><![CDATA[<p>Hello everyone, this is my first blog and I am really excited! </p>
<a id="more"></a>
<h2 id="Say-hi"><a href="#Say-hi" class="headerlink" title="Say hi"></a>Say hi</h2><p>I guess my blog will mainly talk about programming, my thoughts and what I learned recently. It is a good habit to write things down, isn’t it? Actually I had a thought about building my own blog from long time ago, but I was too lazy lol. Now during my winter break, because of COVID-19, I got a lot of free time. I think it is time to learn something that I’m interested in and record my learning progress.</p>
<p>BTW, I am a non-native speaker, and my first language is Chinese. However, I would like to try to write my posts in English to push myself think in English. So if my words are non-native or weired, please forgive me :)</p>
<h2 id="About-blog"><a href="#About-blog" class="headerlink" title="About blog"></a>About blog</h2><p>The blog is created based on <code>Hexo + GitHub Page + hexo-theme-next</code>. the process is much more fluent than I expect (i.e. thanks for the detailed doc). I spent two days on creating the blog. The most time-consuming thing is to decide which theme I prefer and adjust the page details and animations. I did not buy a domain name because I think my blog is more like a diary to me and this is good enough.</p>
<p>That’s it. Hope this is a good start and thanks for reading my blog!</p>
]]></content>
      <categories>
        <category>Some thoughts</category>
      </categories>
      <tags>
        <tag>Thoughts</tag>
      </tags>
  </entry>
  <entry>
    <title>Elastic Compute Cloud</title>
    <url>/blog/2020/12/28/2020-12-28-Elastic-Compute-Cloud/</url>
    <content><![CDATA[<p>Amazon Elastic Compute Cloud (Amazon EC2) provides virtual machines (VM) where you can host the same kinds of applications that you might run on a traditional on-premises server. This blog is to record what I learned about EC2 recently. </p>
<a id="more"></a>

<h2 id="EC2-use-cases"><a href="#EC2-use-cases" class="headerlink" title="EC2 use cases"></a>EC2 use cases</h2><p>The use cases include Application servers, Web servers, Database servers, Game servers, Mail servers, Media servers Catalog servers, File servers, Computing servers, Proxy servers, and so on.</p>
<h2 id="Choices-for-EC2-instance-launch"><a href="#Choices-for-EC2-instance-launch" class="headerlink" title="Choices for EC2 instance launch"></a>Choices for EC2 instance launch</h2><p>It includes AMI, Instance type, Network settings, IAM role, User data, Storage options, Tags, Security group, and Key pair.</p>
<h3 id="AMI"><a href="#AMI" class="headerlink" title="AMI"></a>AMI</h3><p>An Amazon Machine Image (AMI) provides information that is required to launch an EC2 instance (i.e. a virtual machine that runs in the AWS Cloud). You must specify a source AMI when you launch an  instance. AMI contains a Windows or Linux OS. It also often has some software pre-installed.</p>
<p>An AMI is created from an EC2 instance. Details are shown below.</p>
<p><img src="https://junyi-blog.oss-us-east-1.aliyuncs.com/2020/20201228181730.png"></p>
<h3 id="Instance-Type"><a href="#Instance-Type" class="headerlink" title="Instance Type"></a>Instance Type</h3><p>The instance type that you choose determines - Memoery (RAM), Prcessing power (CPU), Disk space and disk type (Storage), and Network performance</p>
<p>EC2 instance type naming and sizes: (Of course large size costs more money)</p>
<p><img src="https://junyi-blog.oss-us-east-1.aliyuncs.com/2020/20201228182758.png"></p>
<p><img src="https://junyi-blog.oss-us-east-1.aliyuncs.com/2020/20201228182843.png"></p>
<p>T3 instances: Use cases include websites and web applications, development environments, build servers, code repositories, microservices, test and staging environments, and line-of-business applications.</p>
<p>C5 instances: Use cases include scientific modeling, batch processing, ad serving, highly scalable multiplayer gaming, and video encoding.</p>
<p>R5 instances: Use cases include high-performance databases, data mining and analysis, in-memory databases, distributed web-scale in-memory caches, applications that perform real-time processing of unstructured big data, Apache Hadoop or Apache Spark clusters, and other enterprise applications</p>
<h3 id="Specify-network-settings"><a href="#Specify-network-settings" class="headerlink" title="Specify network settings"></a>Specify network settings</h3><p>After you have chosen an AMI and an instance type, you must specify the network location where the EC2 instance will be deployed.</p>
<p>When you launch an instance in a default VPC (i.e. you do not specify a VPC for the instance), AWS will assign it a public IP addressby default. When you launch an instance into a nondefault VPC (you got one), the subnet has an attribute that determines whether instances launched into that subnet receive a public IP address from the public IPv4 address pool.</p>
<p><img src="https://junyi-blog.oss-us-east-1.aliyuncs.com/2020/20201228183332.png"></p>
<h3 id="Attach-IAM-role"><a href="#Attach-IAM-role" class="headerlink" title="Attach IAM role"></a>Attach IAM role</h3><p>It is common to use EC2 instances to run an application that must make secure API calls to other AWS services. To support these use cases, AWS enables you to attach an AWS Identity and Access Management (IAM) role to an EC2 instance</p>
<p>Note that you should never store AWS credentials on an EC2 instance. It is highly insecure. Instead, attach an IAM role to theEC2 instance. Also, note that IAM roles are used for short-term credentials and IAM group is used for permanent credentials.</p>
<p><img src="https://junyi-blog.oss-us-east-1.aliyuncs.com/2020/20201228183706.png"></p>
<h3 id="Storage-options"><a href="#Storage-options" class="headerlink" title="Storage options"></a>Storage options</h3><p>Amazon Elastic Block Store (Amazon EBS) is an easy-to-use, high-performance <code>durable block storage</code> service that is designed to be used with Amazon EC2 for both throughput- and transaction-intensive workloads. </p>
<p>Amazon EC2 Instance Store provides <code>ephemeral, or temporary</code>, block-level stora ge for your instance. This storage is located on disks that are physically attached to the host computer. Instance Store works well when you must temporarily store information that changes frequently, such as buffers, caches, scratch data, and other temporary content.</p>
<p>Amazon Elastic File System (Amazon EFS) provides a simple, scalable, fully managed elastic Network File System (NFS) file system for use with AWS Cloud services and on-premises resources. It is built to scale on-demand to petabytes without disrupting applications. It grows and shrinks automatically as you add and remove files, which reduces the need to provision and manage capacity to accommodate growth.</p>
<p>Amazon Simple Storage Service (Amazon S3) is an object storage service that offers scalability, data availability, security, and performance. </p>
<h3 id="Tags"><a href="#Tags" class="headerlink" title="Tags"></a>Tags</h3><p>A tag is a label that you assign to an AWS resource. Each tag consists of a key and an optional value, both of which you define. Tags enable you to categorize AWS resources, such as EC2 instances, in different ways. For example, you might tag instances by purpose, owner, or environment. Tagging is how you can attach metadata to an EC2 instance. </p>
<h3 id="Security-group-settings"><a href="#Security-group-settings" class="headerlink" title="Security group settings"></a>Security group settings</h3><p>A security group is a set of firewall rules that control traffic to the instance.</p>
<h3 id="Create-the-key-pair"><a href="#Create-the-key-pair" class="headerlink" title="Create the key pair"></a>Create the key pair</h3><p>Amazon EC2 uses public–key cryptography to encrypt and decrypt login information. The technology uses a public key to encrypt a piece of data, and then the recipient uses the private key to decrypt the data. The public and private keys are known as a key pair. Public-key cryptography enables you to securely access your instances by using a private key instead of a password.</p>
<p>Reference: <a href="https://aws.amazon.com/training/awsacademy/">AWS Academy</a></p>
]]></content>
      <categories>
        <category>AWS</category>
      </categories>
      <tags>
        <tag>AWS</tag>
      </tags>
  </entry>
</search>
